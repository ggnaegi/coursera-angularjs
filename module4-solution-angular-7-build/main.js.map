{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.states.ts","webpack:///./src/app/categories.component.html","webpack:///./src/app/categories.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/items.component.ts","webpack:///./src/app/router.config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<ui-view>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MenuApp</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" uiSref=\\\"app-root\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" uiSref=\\\"categories\\\">Categories</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"jumbotron mt-2\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-4\\\">MenuApp</h1>\\n      <p class=\\\"lead\\\">Welcome to the MenuApp!</p>\\n      <a class=\\\"btn btn-primary btn-lg\\\" href=\\\"#\\\" uiSref=\\\"categories\\\">Show me the Categories!</a>\\n    </div>\\n  </div>\\n</ui-view>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule} from \"@angular/common\";\nimport { HttpClientModule } from '@angular/common/http';\nimport {UIRouterModule} from \"@uirouter/angular\";\nimport { AppComponent } from './app.component';\nimport {CategoriesComponent} from \"./categories.component\";\nimport {ItemsComponent, ItemsLiComponent} from \"./items.component\";\nimport {DataService} from \"./data.service\";\nimport {routerConfigFn} from './router.config';\nimport {platformBrowserDynamic} from \"@angular/platform-browser-dynamic\";\nimport {appState, categoriesState, itemsState} from \"./app.states\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoriesComponent,\n    ItemsComponent,\n    ItemsLiComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    CommonModule,\n    UIRouterModule.forRoot({\n      states: [appState, categoriesState, itemsState],\n      useHash: true,\n      config: routerConfigFn,\n    })\n  ],\n  exports: [\n    UIRouterModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.error(err));\n","import {AppComponent} from './app.component';\r\nimport {CategoriesComponent} from \"./categories.component\";\r\nimport {ItemsComponent, ItemsLiComponent} from \"./items.component\";\r\nimport {DataService} from \"./data.service\";\r\nimport {Transition} from '@uirouter/core';\r\nimport get = Reflect.get;\r\n\r\nexport const appState = {\r\n  name: 'app',\r\n  component: AppComponent,\r\n  url: '/',\r\n};\r\n\r\nexport const getAllCategoriesPrd = (dataService) => {\r\n  return dataService.getAllCategories();\r\n}\r\n\r\nexport const categoriesState = {\r\n  name: 'categories',\r\n  url: '/categories',\r\n  component: CategoriesComponent,\r\n  resolve: [\r\n    {\r\n      token:'categories',\r\n      deps:[DataService],\r\n      resolveFn: getAllCategoriesPrd\r\n    }\r\n  ]\r\n};\r\n\r\nexport const getItemsForCategoryPrd = (dataService:DataService, transition:Transition) => {\r\n  return dataService.getItemsForCategory(transition.params().categoryId);\r\n}\r\n\r\nexport const itemsState = {\r\n  name: 'items',\r\n  parent: 'categories',\r\n  url: '/items/:categoryId',\r\n  resolve:[\r\n    {\r\n      token:'itemsData',\r\n      deps:[DataService, Transition],\r\n      resolveFn: getItemsForCategoryPrd\r\n    }\r\n  ],\r\n  views:{\r\n    \"items-div\" : {\r\n      component:ItemsComponent\r\n    },\r\n    \"items-li\" :{\r\n      component:ItemsLiComponent\r\n    }\r\n  }\r\n};\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MenuApp</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" uiSref=\\\"home\\\">Home</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" uiSref=\\\"categories\\\">Categories</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" ui-view=\\\"items-li\\\"></li>\\r\\n      <li class=\\\"nav-item dropdown\\\">\\r\\n        <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          Choose category\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n          <a class=\\\"dropdown-item\\\" uiSref=\\\"items\\\" [uiParams]=\\\"{categoryId:category.short_name}\\\" *ngFor=\\\"let category of categoriesList\\\">{{ category.name}}</a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div ui-view=\\\"items-div\\\">\\r\\n  <ul class=\\\"mt-2 ml-2 list-group\\\">\\r\\n    <a class=\\\"list-group-item list-group-item-action\\\" *ngFor=\\\"let category of categoriesList\\\" uiSref=\\\"items\\\" [uiParams]=\\\"{categoryId:category.short_name}\\\" href=\\\"#\\\">\\r\\n      {{category.name}}\\r\\n    </a>\\r\\n  </ul>\\r\\n</div>\\r\\n\"","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './categories.component.html'\r\n})\r\nexport class CategoriesComponent {\r\n  @Input('categories')\r\n  categoriesList;\r\n}\r\n","import {Injectable, Inject} from \"@angular/core\";\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {MenuItem} from \"./menuItem\";\r\nimport {Category} from \"./category\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  baseUrl = \"https://davids-restaurant.herokuapp.com\";\r\n  constructor(@Inject(HttpClient) private httpClient: HttpClient){\r\n  }\r\n\r\n  getAllCategories() {\r\n    return this.httpClient.get<any[]>(this.baseUrl +\"/categories.json\").toPromise().then(result =>{\r\n      return result.sort((x,y) => {\r\n        let xName = x.name.toLowerCase();\r\n        let yName = y.name.toLowerCase();\r\n        return yName <= xName ? xName > yName ? 1 : 0 : -1;\r\n      })\r\n    });\r\n  }\r\n\r\n  getItemsForCategory(categoryShortName){\r\n    return this.httpClient.get<[Category, MenuItem[]]>(this.baseUrl + \"/menu_items.json\",\r\n      {params: new HttpParams().set('category', categoryShortName)}).toPromise().then(result => {\r\n      return {\r\n\r\n        'currentCategory': result['category'],\r\n        'sortedItems': result['menu_items'].sort((x, y) => {\r\n          let xName = x.name.toLowerCase();\r\n          let yName = y.name.toLowerCase();\r\n          return yName <= xName ? xName > yName ? 1 : 0 : -1;\r\n        })\r\n      };\r\n    });\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  template:\r\n    \"<ul class=\\\"list-group mt-2 ml-2\\\">\\n\" +\r\n    \"<li *ngFor=\\\"let item of itemsData.sortedItems\\\" class=\\\"list-group-item\\\">{{item.name}}</li>\\n\" +\r\n    \"</ul>\"\r\n})\r\nexport class ItemsComponent{\r\n  @Input('itemsData')\r\n  itemsData;\r\n}\r\n\r\n@Component({\r\n  template:\"<a class=\\\"nav-link\\\">{{itemsData.currentCategory.name}}<span class=\\\"sr-only\\\">(current)</span></a>\"\r\n})\r\nexport class ItemsLiComponent {\r\n  @Input('itemsData')\r\n  itemsData;\r\n}\r\n","import { UIRouter, Category } from '@uirouter/core';\r\nimport {Injector} from '@angular/core';\r\n\r\nexport function routerConfigFn(router: UIRouter, injector: Injector) {\r\n  router.urlService.rules.otherwise({state:'app'});\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}